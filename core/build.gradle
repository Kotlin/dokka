import javax.tools.ToolProvider

buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    apply plugin: 'kotlin'

    sourceCompatibility = 1.8

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            languageVersion = language_version
            apiVersion = language_version
            jvmTarget = "1.8"
        }
    }
}

dependencies {
    testCompile project(':testApi')
    compile project(":integration")
    compile project(path: ":coreDependencies", configuration: "shadow")

    compile "org.jetbrains.kotlin:kotlin-stdlib:$bundled_kotlin_compiler_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$bundled_kotlin_compiler_version"

    compile group: 'com.google.inject', name: 'guice', version: '3.0'
    implementation "org.jsoup:jsoup:1.12.1"

    compile "org.jetbrains.kotlin:kotlin-compiler:$bundled_kotlin_compiler_version"
    compile "org.jetbrains.kotlin:kotlin-script-runtime:$bundled_kotlin_compiler_version"

    compile "org.jetbrains:markdown:$markdownVersion"

    compile 'org.jetbrains.kotlinx:kotlinx-html-jvm:0.6.10'

    //tools.jar
//    def toolsJar = files(((URLClassLoader) ToolProvider.getSystemToolClassLoader()).getURLs().findAll { it.path.endsWith("jar") })
//    compileOnly toolsJar
//    testCompile toolsJar


    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: kotlin_version
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    implementation "com.google.code.gson:gson:$gson_version"

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-js:$bundled_kotlin_compiler_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-common:$bundled_kotlin_compiler_version"
//    testImplementation project(":core:testApi")

    testCompile ideaRT()
}

apply plugin: 'maven-publish'

publishing {
    publications {
        dokkaCore(MavenPublication) { publication ->
            artifactId = 'dokka-core'

            from components.java
        }
    }
}

bintrayPublication(project, ["dokkaCore"])
