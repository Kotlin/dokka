name: Publish preview to GitHub Actions Artifacts

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  kotlinx-coroutines:
    runs-on: ubuntu-latest
    if: >  # Run this job only for pull requests from forks because members with write access have web preview
      github.event_name != 'pull_request' || 
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != 'Kotlin/dokka')
    steps:
      - name: Checkout dokka
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
      - name: Document coroutines
        run: ./gradlew :dokka-integration-tests:gradle:testExternalProjectKotlinxCoroutines --stacktrace "-Dorg.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=500m"
        env:
          DOKKA_TEST_OUTPUT_PATH: ${{ github.workspace }}/dokka/coroutines
      - name: Copy files to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dokka-coroutines
          path: ${{ github.workspace }}/dokka/coroutines
          retention-days: 7

  kotlinx-serialization:
    runs-on: ubuntu-latest
    if: >  # Run this job only for pull requests from forks because members with write access have web preview
      github.event_name != 'pull_request' || 
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != 'Kotlin/dokka')
    steps:
      - name: Checkout dokka
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
      - name: Document serialization
        run: ./gradlew :dokka-integration-tests:gradle:testExternalProjectKotlinxSerialization --stacktrace "-Dorg.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=500m"
        env:
          DOKKA_TEST_OUTPUT_PATH: ${{ github.workspace }}/dokka/serialization
      - name: Copy files to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dokka-serialization
          path: ${{ github.workspace }}/dokka/serialization
          retention-days: 7

  biojava:
    runs-on: ubuntu-latest
    if: >  # Run this job only for pull requests from forks because members with write access have web preview
      github.event_name != 'pull_request' || 
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != 'Kotlin/dokka')
    steps:
      - name: Checkout dokka
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
      - name: Document biojava-core
        run: ./gradlew :dokka-integration-tests:maven:testExternalProjectBioJava --stacktrace
        env:
          DOKKA_TEST_OUTPUT_PATH: ${{ github.workspace }}/dokka/biojava
      - name: Copy files to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dokka-biojava
          path: ${{ github.workspace }}/dokka/biojava
          retention-days: 7
