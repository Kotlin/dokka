/*
 * Copyright 2014-2023 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */

plugins {
    id("dokkabuild.test-integration")
    id("dokkabuild.setup-maven-cli")
}

dependencies {
    implementation(projects.utilities)

    implementation(kotlin("test-junit5"))
    implementation(libs.junit.jupiterApi)
}

/** A list of Included Build projects that are required for running integration tests. */
val projectsUnderTest = listOf(
    gradle.includedBuild("dokka"),
    gradle.includedBuild("runner-maven-plugin"),
)

/** the Maven repos of each IncludedBuild generated by the dev.adamko.dev-publish plugin */
val testMavenDirs = files(projectsUnderTest.map { it.projectDir.resolve("build/maven-dev") })

tasks.integrationTestPreparation {
    dependsOn(
        projectsUnderTest.map { it.task(":integrationTestPreparation") }
    )
}

tasks.integrationTest {
    dependsOn(tasks.integrationTestPreparation)

    dependsOn(tasks.installMavenBinary)
    val mvn = mavenCliSetup.mvn
    inputs.file(mvn)

    val dokkaVersion = provider { project.version.toString() }
    inputs.property("dokkaVersion", dokkaVersion)

    testMavenDirs.forEach { testMavenDir -> inputs.dir(testMavenDir) }
    systemProperty(
        "projectLocalMavenDirs",
        testMavenDirs.joinToString(":") { it.invariantSeparatorsPath }
    )

    doFirst("workaround for https://github.com/gradle/gradle/issues/24267") {
        environment("DOKKA_VERSION", dokkaVersion.get())
        environment("MVN_BINARY_PATH", mvn.get().asFile.invariantSeparatorsPath)
    }
}
