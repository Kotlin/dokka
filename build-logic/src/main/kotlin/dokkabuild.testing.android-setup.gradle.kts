/*
 * Copyright 2014-2023 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */
import org.gradle.api.tasks.PathSensitivity.RELATIVE

/**
 * Utilities for preparing Android projects for Integration Tests
 */

plugins {
    base
}

/**
 * Create an `local.properties` file so that Android projects will automatically work in integration tests.
 */
abstract class CreateAndroidLocalPropertiesFiles : DefaultTask() {
    @get:OutputFiles
    val localPropertiesFilesDestinations: List<File>
        get() = androidProjectsDirectories.map { project ->
            project.resolve("local.properties")
        }

    /**
     * Location of the Android SDK.
     */
    @get:Input
    // Use a string not a dir because we don't actually care about the contents of the directory,
    // because Gradle will waste time fingerprinting a large directory.
    abstract val androidSdkDirPath: Property<String>

    @get:InputFiles
    @get:PathSensitive(RELATIVE)
    abstract val androidProjectsDirectories: ConfigurableFileCollection

    @TaskAction
    fun action() {
        val localPropertiesText = """
          |# DO NOT EDIT - Generated by $path
          |
          |sdk.dir=${androidSdkDirPath.get()}
          |
        """.trimMargin()

        localPropertiesFilesDestinations.forEach { dst ->
            dst.createNewFile()
            dst.writeText(localPropertiesText)
        }
    }
}

val createAndroidLocalPropertiesFiles by tasks.registering(CreateAndroidLocalPropertiesFiles::class) {
    description = "updates the local.properties file in each template Android project"
}
