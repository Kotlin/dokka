/*
 * Custom Dokka styles
 */
code .token {
    white-space: pre;
}

/**
 * Styles based on webhelp's prism.js styles
 * Changes:
 * - Since webhelp's styles are in .pcss, they use nesting which is not achievable in native CSS
 *   so nested css blocks have been unrolled (like dark theme).
 * - Webhelp uses "Custom Class" prism.js plugin, so all of their prism classes are prefixed with "--prism".
 *   Dokka doesn't seem to need this plugin at the moment, so all "--prism" prefixes have been removed.
 * - Removed all styles related to `pre` and `code` tags. Kotlinlang's resulting styles are so spread out and complicated
 *   that it's difficult to gather in one place. Instead use code styles defined in the main Dokka styles,
 *   which at the moment looks fairly similar.
 *
 * Based on prism.js default theme
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #8c8c8c;
}

.token.punctuation {
	color: #999;
}

.token.namespace {
	opacity: 0.7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
	color: #871094;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #067d17;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
	color: #9a6e3a;
	/* This background color was intended by the author of this theme. */
	background: hsla(0, 0%, 100%, 0.5);
}

.token.atrule,
.token.attr-value,
.token.keyword {
	font-size: inherit; /* to override .keyword */
	color: #0033b3;
}

.token.function {
	color: #00627a;
}

.token.class-name {
	color: #000000;
}

.token.regex,
.token.important,
.token.variable {
	color: #871094;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

.token.operator {
	background: none;
}

/*
 * DARK THEME
 */
:root.theme-dark .token.comment,
:root.theme-dark .token.prolog,
:root.theme-dark .token.cdata {
	color: #808080;
}

:root.theme-dark .token.delimiter,
:root.theme-dark .token.boolean,
:root.theme-dark .token.keyword,
:root.theme-dark .token.selector,
:root.theme-dark .token.important,
:root.theme-dark .token.atrule {
	color: #cc7832;
}

:root.theme-dark .token.operator,
:root.theme-dark .token.punctuation,
:root.theme-dark .token.attr-name {
	color: #a9b7c6;
}

:root.theme-dark .token.tag,
:root.theme-dark .token.tag .punctuation,
:root.theme-dark .token.doctype,
:root.theme-dark .token.builtin {
	color: #e8bf6a;
}

:root.theme-dark .token.entity,
:root.theme-dark .token.number,
:root.theme-dark .token.symbol {
	color: #6897bb;
}

:root.theme-dark .token.property,
:root.theme-dark .token.constant,
:root.theme-dark .token.variable {
	color: #9876aa;
}

:root.theme-dark .token.string,
:root.theme-dark .token.char {
	color: #6a8759;
}

:root.theme-dark .token.attr-value,
:root.theme-dark .token.attr-value .punctuation {
	color: #a5c261;
}

:root.theme-dark .token.attr-value .punctuation:first-child {
	color: #a9b7c6;
}

:root.theme-dark .token.url {
	text-decoration: underline;

	color: #287bde;
	background: transparent;
}

:root.theme-dark .token.function {
	color: #ffc66d;
}

:root.theme-dark .token.regex {
	background: #364135;
}

:root.theme-dark .token.class-name {
	color: #a9b7c6;
}

:root.theme-dark .token.function {
	color: #ffc66d;
}

:root.theme-darkcode .language-css .token.property,
:root.theme-darkcode .language-css,
:root.theme-dark .token.property + .token.punctuation {
	color: #a9b7c6;
}

code.language-css .token.id {
	color: #ffc66d;
}

:root.theme-dark code.language-css .token.selector > .token.class,
:root.theme-dark code.language-css .token.selector > .token.attribute,
:root.theme-dark code.language-css .token.selector > .token.pseudo-class,
:root.theme-dark code.language-css .token.selector > .token.pseudo-element {
	color: #ffc66d;
}

:root.theme-dark .language-plaintext .token {
	/* plaintext code should be colored as article text */
	color: inherit !important;
}

/* Fix for prism TOML language */
.token.table {
  display: revert;
}

/* Code toolbar */
div.code-toolbar {
  position: relative;
}

div.code-toolbar > .toolbar {
  opacity: 0;
  margin-right: 28px;
  position: absolute;
  right: .2em;
  top: .3em;
  transition: opacity 100ms linear;
  z-index: 10;
}

div.code-toolbar > .toolbar > .toolbar-item {
  display: inline-block;
  line-height: 2;
}

div.code-toolbar > .toolbar > .toolbar-item > a, div.code-toolbar > .toolbar > .toolbar-item > button, div.code-toolbar > .toolbar > .toolbar-item > span {
  background: #f5f2f0;
  background: rgba(224, 224, 224, .2);
  border-radius: .5em;
  box-shadow: 0 2px 0 0 rgba(0, 0, 0, .2);
  color: var(--default-font-color);
  font-size: .8em;
  padding: 0 .5em;
}

div.code-toolbar > .toolbar > .toolbar-item > a:focus, div.code-toolbar > .toolbar > .toolbar-item > a:hover, div.code-toolbar > .toolbar > .toolbar-item > button:focus, div.code-toolbar > .toolbar > .toolbar-item > button:hover, div.code-toolbar > .toolbar > .toolbar-item > span:focus, div.code-toolbar > .toolbar > .toolbar-item > span:hover {
  color: inherit;
  text-decoration: none;
}

div.code-toolbar > .toolbar > .toolbar-item > a {
  cursor: pointer;
}

div.code-toolbar > .toolbar > .toolbar-item > button {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
}

div.code-toolbar:hover > .toolbar {
  opacity: 100%;
}

div.code-toolbar:focus-within > .toolbar {
  opacity: 100%;
}

[class*=hover].token {
  background-color: unset !important;
}

/* Brace hover */
.token.punctuation.brace-hover, .token.punctuation.brace-selected {
  outline: solid 1px color-mix(in hsl, var(--default-font-color) 60%, transparent);
}

/* Diff highlighting */
.token.deleted:not(.prefix) {
  background-color: rgba(255, 0, 0, .1);
  color: inherit;
  display: block;
}

.token.inserted:not(.prefix) {
  background-color: rgba(0, 255, 128, .1);
  color: inherit;
  display: block;
}
